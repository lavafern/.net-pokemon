// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using pokemon.Data;

#nullable disable

namespace pokemon.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("pokemon.Models.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Elements");
                });

            modelBuilder.Entity("pokemon.Models.ElementOnPokemon", b =>
                {
                    b.Property<int>("ElementId")
                        .HasColumnType("integer");

                    b.Property<int>("PokemonId")
                        .HasColumnType("integer");

                    b.HasKey("ElementId", "PokemonId");

                    b.HasIndex("PokemonId");

                    b.ToTable("ElementOnPokemons");
                });

            modelBuilder.Entity("pokemon.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("pokemon.Models.OwnerOnPokemon", b =>
                {
                    b.Property<int>("OwnerId")
                        .HasColumnType("integer");

                    b.Property<int>("PokemonId")
                        .HasColumnType("integer");

                    b.HasKey("OwnerId", "PokemonId");

                    b.HasIndex("PokemonId");

                    b.ToTable("OwnerOnPokemons");
                });

            modelBuilder.Entity("pokemon.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Power")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("pokemon.Models.ReviewOnPokemon", b =>
                {
                    b.Property<int>("ReviewerId")
                        .HasColumnType("integer");

                    b.Property<int>("PokemonId")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("Rate")
                        .HasColumnType("integer");

                    b.HasKey("ReviewerId", "PokemonId");

                    b.HasIndex("PokemonId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("pokemon.Models.Reviewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Reviewers");
                });

            modelBuilder.Entity("pokemon.Models.ElementOnPokemon", b =>
                {
                    b.HasOne("pokemon.Models.Element", "Element")
                        .WithMany("ElementOnPokemons")
                        .HasForeignKey("ElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pokemon.Models.Pokemon", "Pokemon")
                        .WithMany("ElementOnPokemons")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Element");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("pokemon.Models.OwnerOnPokemon", b =>
                {
                    b.HasOne("pokemon.Models.Owner", "Owner")
                        .WithMany("ownerOnPokemons")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pokemon.Models.Pokemon", "Pokemon")
                        .WithMany("OwnerOnPokemons")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("pokemon.Models.ReviewOnPokemon", b =>
                {
                    b.HasOne("pokemon.Models.Pokemon", "Pokemon")
                        .WithMany("ReviewOnPokemons")
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pokemon.Models.Reviewer", "Reviewer")
                        .WithMany("ReviewOnPokemons")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pokemon");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("pokemon.Models.Element", b =>
                {
                    b.Navigation("ElementOnPokemons");
                });

            modelBuilder.Entity("pokemon.Models.Owner", b =>
                {
                    b.Navigation("ownerOnPokemons");
                });

            modelBuilder.Entity("pokemon.Models.Pokemon", b =>
                {
                    b.Navigation("ElementOnPokemons");

                    b.Navigation("OwnerOnPokemons");

                    b.Navigation("ReviewOnPokemons");
                });

            modelBuilder.Entity("pokemon.Models.Reviewer", b =>
                {
                    b.Navigation("ReviewOnPokemons");
                });
#pragma warning restore 612, 618
        }
    }
}
